<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddonName" xml:space="preserve">
    <value>Addon Vistony Distribution</value>
  </data>
  <data name="FinishLoading" xml:space="preserve">
    <value>Load Finished ...</value>
  </data>
  <data name="Message001" xml:space="preserve">
    <value>Starting Menu Load...</value>
  </data>
  <data name="Message003" xml:space="preserve">
    <value>Error Loading Menu</value>
  </data>
  <data name="Message100" xml:space="preserve">
    <value>Select date from</value>
  </data>
  <data name="Message101" xml:space="preserve">
    <value>Select the date until</value>
  </data>
  <data name="Message102" xml:space="preserve">
    <value>Select Worker</value>
  </data>
  <data name="Message103" xml:space="preserve">
    <value>Select State</value>
  </data>
  <data name="Message104" xml:space="preserve">
    <value>Select Business Unit</value>
  </data>
  <data name="Message105" xml:space="preserve">
    <value>Select Vendor Code</value>
  </data>
  <data name="Message120" xml:space="preserve">
    <value>Date From cannot be less than : {0}</value>
  </data>
  <data name="Message122" xml:space="preserve">
    <value>Next &gt;</value>
  </data>
  <data name="Message123" xml:space="preserve">
    <value>To finalize</value>
  </data>
  <data name="Message208" xml:space="preserve">
    <value>Dispatch is already consolidated</value>
  </data>
  <data name="Message209" xml:space="preserve">
    <value>Document : {0} was consolidated successfully</value>
  </data>
  <data name="Message210" xml:space="preserve">
    <value>Document : {0} is being processed</value>
  </data>
  <data name="Message211" xml:space="preserve">
    <value>Document: {0} assigned to Driver: {1}</value>
  </data>
  <data name="Message212" xml:space="preserve">
    <value>Step {0} of {1}</value>
  </data>
  <data name="Message301" xml:space="preserve">
    <value>Did not mark any record</value>
  </data>
  <data name="Message302" xml:space="preserve">
    <value>Error in set date range</value>
  </data>
  <data name="Message303" xml:space="preserve">
    <value>Select Driver</value>
  </data>
  <data name="Message304" xml:space="preserve">
    <value>Select Plate</value>
  </data>
  <data name="Message305" xml:space="preserve">
    <value>Select Helper</value>
  </data>
  <data name="Message306" xml:space="preserve">
    <value>Select Date</value>
  </data>
  <data name="Message307" xml:space="preserve">
    <value>Are you sure to schedule the marked documents?</value>
  </data>
  <data name="Message308" xml:space="preserve">
    <value>Completed Driver Assignment</value>
  </data>
  <data name="Message309" xml:space="preserve">
    <value>Are you sure to change the dispatch status for the marked documents?</value>
  </data>
  <data name="Message310" xml:space="preserve">
    <value>finished process</value>
  </data>
  <data name="Message311" xml:space="preserve">
    <value>Are you sure to change the dispatch status to Delivered for the marked documents?</value>
  </data>
  <data name="Message312" xml:space="preserve">
    <value>You must select a type of Occurrence</value>
  </data>
  <data name="Message313" xml:space="preserve">
    <value>You must select a type of State</value>
  </data>
  <data name="Message314" xml:space="preserve">
    <value>You must select an option to program</value>
  </data>
  <data name="Message315" xml:space="preserve">
    <value>You must select date to program</value>
  </data>
  <data name="Message316" xml:space="preserve">
    <value>Select a type of consolidation</value>
  </data>
  <data name="Message317" xml:space="preserve">
    <value>Are you sure to save {0} to the marked records?</value>
  </data>
  <data name="Message318" xml:space="preserve">
    <value>Document: {0} Could not update {1}</value>
  </data>
  <data name="Message319" xml:space="preserve">
    <value>Are you sure to change the dispatch status to Scheduled for the marked documents?</value>
  </data>
  <data name="Message320" xml:space="preserve">
    <value>Adding Dispatch Sheet Record</value>
  </data>
  <data name="Message321" xml:space="preserve">
    <value>Are you sure to change the dispatch status to Scheduled for the marked documents?</value>
  </data>
  <data name="Message322" xml:space="preserve">
    <value>Are you sure to change the dispatch status to Scheduled for the marked documents?</value>
  </data>
  <data name="Message324" xml:space="preserve">
    <value>The Dispatch Sheet was created for the driver '{0}'</value>
  </data>
  <data name="Message325" xml:space="preserve">
    <value>Updating Dispatch Tracking</value>
  </data>
  <data name="Message326" xml:space="preserve">
    <value>Updated Dispatch Tracking</value>
  </data>
  <data name="Message327" xml:space="preserve">
    <value>Select at least 1 record</value>
  </data>
  <data name="Message328" xml:space="preserve">
    <value>Select a State</value>
  </data>
  <data name="Message329" xml:space="preserve">
    <value>The Order is already Scheduled</value>
  </data>
  <data name="Message330" xml:space="preserve">
    <value>Select an Occurrence</value>
  </data>
  <data name="Message331" xml:space="preserve">
    <value>Wrong imei</value>
  </data>
  <data name="Message332" xml:space="preserve">
    <value>The Imei is assigned to another employee \n Do you want to update it ?</value>
  </data>
  <data name="Message333" xml:space="preserve">
    <value>The IMEI was updated correctly</value>
  </data>
  <data name="Message334" xml:space="preserve">
    <value>Validating Data</value>
  </data>
  <data name="MessageFinTracker" xml:space="preserve">
    <value>Tracker Upload Finished</value>
  </data>
  <data name="MessageInicioTracker" xml:space="preserve">
    <value>Starting Tracker Upload</value>
  </data>
  <data name="NotRowFound" xml:space="preserve">
    <value>No data found with the selected criteria</value>
  </data>
  <data name="SAPNotRunning" xml:space="preserve">
    <value>SAP Business One is not running</value>
  </data>
  <data name="StartLoading" xml:space="preserve">
    <value>Starting Charge ...</value>
  </data>
</root>